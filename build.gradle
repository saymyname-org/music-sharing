plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.flywaydb.flyway' version '9.21.0'
	id "co.uzzu.dotenv.gradle" version "4.0.0"
}

group = 'ru.improve'
version = '0.1'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

flyway {
	url = "jdbc:postgresql://${env.fetch('PG_HOST')}:${env.fetch('PG_PORT')}/${env.fetch('PG_DATABASE')}"
	user = env.fetch('PG_USER')
	password = env.fetch('PG_PASSWORD')
	locations = ['filesystem:src/main/resources/db.migration']
	schemas = ['public']
	cleanDisabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'org.hibernate.validator:hibernate-validator-annotation-processor:8.0.1.Final'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.6.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
